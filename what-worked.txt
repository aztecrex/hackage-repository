sudo apt-get update
sudo apt-get install -y gcc libgmp-dev libicu-dev zlib1g-dev libtinfo-dev libssl-dev
pwd
download='https://www.haskell.org/platform/download/8.2.2/haskell-platform-8.2.2-unknown-posix--core-x86_64.tar.gz'
# download='https://haskell.org/platform/download/8.4.2/haskell-platform-8.4.2-unknown-posix--core-x86_64.tar.gz'
wget "$download" -O platform.tgz
tar -xzvf platform.tgz
sudo ./install-haskell-platform.sh
cabal update
cabal --version
ghc --version
git clone https://github.com/haskell/hackage-server/
cd hackage-server
cabal new-build -j
ls
vi cabal.project
time cabal new-build -j
git status
uptime
netstat -pan | grep 8080
curl localhost:8080
fg
jobs
curl localhost:8080
ls -l
cd hackage-server/
ls -l
ls -l dist
ls -l dist-newstyle/
ls -l Distribution
ls -lt
git status
git diff
cat .gitignore 
tree Distribution/
find Distribution/
ls -l
ls -lt
find dist
find dist-newstyle/
ls -lt
ls -l exes/
cat rundocs.sh 
ls -l vendor/
ls -l datafiles/
ls -l docs/
cd dist-newstyle/
ls -l
ls -l build/
ls -l packagedb/
cd build/x86_64-linux/
ls -l
cd ghc-8.2.2/
ls -l
cd hackage-server-0.5.1/
ls -l
cd c/
ls -l
find .
ls -l
ls -l hackage-server/
find hackage-server/
ls - l hackage-server/build/hackage-server/
cd ../../..
cd ..
ls -l
ls -l Dockerfile 
cat Dockerfile 
find -type f -name hackage-server
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server --help
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server --help init
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server init
find -name '*.html'
find -name '*.htm'
ls -l
find -name '*static*'
ls -l datafiles/static/
tree datafiles/static/
find datafiles/static/
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server init --static-dir ./datafiles/static/
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server init --static-dir datafiles/static
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server init --static-dir $(pwd)/datafiles/static
find -name 'templates'
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server init --static-dir $(pwd)/datafiles
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server run
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server run --static-dir $(pwd)/datafiles
bg
netstat -pan | grep 8080
sudo bash
fg
ls -l
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server run --help
./dist-newstyle/build/x86_64-linux/ghc-8.2.2/hackage-server-0.5.1/c/hackage-server/build/hackage-server/hackage-server run --static-dir $(pwd)/datafiles --base-uri=http://ec2-18-204-205-42.compute-1.amazonaws.com:8080/ --ip=0.0.0.0
